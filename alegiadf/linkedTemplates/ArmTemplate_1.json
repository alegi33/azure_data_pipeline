{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "alegiadf"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/dataflow_emp_synapse')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_blob_emp_master",
								"type": "DatasetReference"
							},
							"name": "sourceblobempmaster"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_sqldb_emp_master_synapse",
								"type": "DatasetReference"
							},
							"name": "sinksynapseempmaster",
							"rejectedDataLinkedService": {
								"referenceName": "ls_blob",
								"type": "LinkedServiceReference"
							}
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          EmployeeID as string,",
						"          LastName as string,",
						"          FirstName as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> sourceblobempmaster",
						"sourceblobempmaster sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          EmployeeID as string,",
						"          LastName as string,",
						"          FirstName as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          EmployeeID,",
						"          LastName,",
						"          FirstName",
						"     )) ~> sinksynapseempmaster"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow_payroll_sqldb')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_blob_payroll",
								"type": "DatasetReference"
							},
							"name": "sourceblobpayroll"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_sqldb_payroll",
								"type": "DatasetReference"
							},
							"name": "sinksqldbpayroll",
							"rejectedDataLinkedService": {
								"referenceName": "ls_blob",
								"type": "LinkedServiceReference"
							}
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          Column_1 as string,",
						"          Column_2 as string,",
						"          Column_3 as string,",
						"          Column_4 as string,",
						"          Column_5 as string,",
						"          Column_6 as string,",
						"          Column_7 as string,",
						"          Column_8 as string,",
						"          Column_9 as string,",
						"          Column_10 as string,",
						"          Column_11 as string,",
						"          Column_12 as string,",
						"          Column_13 as string,",
						"          Column_14 as string,",
						"          Column_15 as string,",
						"          Column_16 as string,",
						"          Column_17 as string,",
						"          Column_18 as string,",
						"          Column_19 as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> sourceblobpayroll",
						"sourceblobpayroll sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          FiscalYear as integer,",
						"          PayrollNumber as integer,",
						"          AgencyID as string,",
						"          AgencyName as string,",
						"          EmployeeID as string,",
						"          LastName as string,",
						"          FirstName as string,",
						"          AgencyStartDate as date,",
						"          WorkLocationBorough as string,",
						"          TitleCode as string,",
						"          TitleDescription as string,",
						"          LeaveStatusasofJune30 as string,",
						"          BaseSalary as double,",
						"          PayBasis as string,",
						"          RegularHours as double,",
						"          RegularGrossPaid as double,",
						"          OTHours as double,",
						"          TotalOTPaid as double,",
						"          TotalOtherPay as double",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          FiscalYear = Column_1,",
						"          PayrollNumber = Column_2,",
						"          AgencyID = Column_3,",
						"          AgencyName = Column_4,",
						"          EmployeeID = Column_5,",
						"          LastName = Column_6,",
						"          FirstName = Column_7,",
						"          AgencyStartDate = Column_8,",
						"          WorkLocationBorough = Column_9,",
						"          TitleCode = Column_10,",
						"          TitleDescription = Column_11,",
						"          LeaveStatusasofJune30 = Column_12,",
						"          BaseSalary = Column_13,",
						"          PayBasis = Column_14,",
						"          RegularHours = Column_15,",
						"          RegularGrossPaid = Column_16,",
						"          OTHours = Column_17,",
						"          TotalOTPaid = Column_18,",
						"          TotalOtherPay = Column_19",
						"     )) ~> sinksqldbpayroll"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow_payroll_sqldb_synapse')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_sqldb_payroll",
								"type": "DatasetReference"
							},
							"name": "sourcesqldbpayroll"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_sqldb_payroll_synapse",
								"type": "DatasetReference"
							},
							"name": "sinksynapsepayroll"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          FiscalYear as integer,",
						"          PayrollNumber as integer,",
						"          AgencyID as string,",
						"          AgencyName as string,",
						"          EmployeeID as string,",
						"          LastName as string,",
						"          FirstName as string,",
						"          AgencyStartDate as date,",
						"          WorkLocationBorough as string,",
						"          TitleCode as string,",
						"          TitleDescription as string,",
						"          LeaveStatusasofJune30 as string,",
						"          BaseSalary as double,",
						"          PayBasis as string,",
						"          RegularHours as double,",
						"          RegularGrossPaid as double,",
						"          OTHours as double,",
						"          TotalOTPaid as double,",
						"          TotalOtherPay as double",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> sourcesqldbpayroll",
						"sourcesqldbpayroll sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          FiscalYear as integer,",
						"          PayrollNumber as integer,",
						"          AgencyID as string,",
						"          AgencyName as string,",
						"          EmployeeID as string,",
						"          LastName as string,",
						"          FirstName as string,",
						"          AgencyStartDate as date,",
						"          WorkLocationBorough as string,",
						"          TitleCode as string,",
						"          TitleDescription as string,",
						"          LeaveStatusasofJune30 as string,",
						"          BaseSalary as double,",
						"          PayBasis as string,",
						"          RegularHours as double,",
						"          RegularGrossPaid as double,",
						"          OTHours as double,",
						"          TotalOTPaid as double,",
						"          TotalOtherPay as double",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          FiscalYear,",
						"          PayrollNumber,",
						"          AgencyID,",
						"          AgencyName,",
						"          EmployeeID,",
						"          LastName,",
						"          FirstName,",
						"          AgencyStartDate,",
						"          WorkLocationBorough,",
						"          TitleCode,",
						"          TitleDescription,",
						"          LeaveStatusasofJune30,",
						"          BaseSalary,",
						"          PayBasis,",
						"          RegularHours,",
						"          RegularGrossPaid,",
						"          OTHours,",
						"          TotalOTPaid,",
						"          TotalOtherPay",
						"     )) ~> sinksynapsepayroll"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow_payroll_synapse')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_blob_payroll",
								"type": "DatasetReference"
							},
							"name": "sourceblobpayroll"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_sqldb_payroll_synapse",
								"type": "DatasetReference"
							},
							"name": "sinksynapsepayroll",
							"rejectedDataLinkedService": {
								"referenceName": "ls_blob",
								"type": "LinkedServiceReference"
							}
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          Column_1 as string,",
						"          Column_2 as string,",
						"          Column_3 as string,",
						"          Column_4 as string,",
						"          Column_5 as string,",
						"          Column_6 as string,",
						"          Column_7 as string,",
						"          Column_8 as string,",
						"          Column_9 as string,",
						"          Column_10 as string,",
						"          Column_11 as string,",
						"          Column_12 as string,",
						"          Column_13 as string,",
						"          Column_14 as string,",
						"          Column_15 as string,",
						"          Column_16 as string,",
						"          Column_17 as string,",
						"          Column_18 as string,",
						"          Column_19 as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> sourceblobpayroll",
						"sourceblobpayroll sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          FiscalYear as integer,",
						"          PayrollNumber as integer,",
						"          AgencyID as string,",
						"          AgencyName as string,",
						"          EmployeeID as string,",
						"          LastName as string,",
						"          FirstName as string,",
						"          AgencyStartDate as date,",
						"          WorkLocationBorough as string,",
						"          TitleCode as string,",
						"          TitleDescription as string,",
						"          LeaveStatusasofJune30 as string,",
						"          BaseSalary as double,",
						"          PayBasis as string,",
						"          RegularHours as double,",
						"          RegularGrossPaid as double,",
						"          OTHours as double,",
						"          TotalOTPaid as double,",
						"          TotalOtherPay as double",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          FiscalYear = Column_1,",
						"          PayrollNumber = Column_2,",
						"          AgencyID = Column_3,",
						"          AgencyName = Column_4,",
						"          EmployeeID = Column_5,",
						"          LastName = Column_6,",
						"          FirstName = Column_7,",
						"          AgencyStartDate = Column_8,",
						"          WorkLocationBorough = Column_9,",
						"          TitleCode = Column_10,",
						"          TitleDescription = Column_11,",
						"          LeaveStatusasofJune30 = Column_12,",
						"          BaseSalary = Column_13,",
						"          PayBasis = Column_14,",
						"          RegularHours = Column_15,",
						"          RegularGrossPaid = Column_16,",
						"          OTHours = Column_17,",
						"          TotalOTPaid = Column_18,",
						"          TotalOtherPay = Column_19",
						"     )) ~> sinksynapsepayroll"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow_title_synapse')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_blob_job_title",
								"type": "DatasetReference"
							},
							"name": "sourceblobtitle"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_sqldb_job_title_synapse",
								"type": "DatasetReference"
							},
							"name": "sinktitlesynapse",
							"rejectedDataLinkedService": {
								"referenceName": "ls_blob",
								"type": "LinkedServiceReference"
							}
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          TitleCode as string,",
						"          TitleDescription as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> sourceblobtitle",
						"sourceblobtitle sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          TitleCode as string,",
						"          TitleDescription as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          TitleCode,",
						"          TitleDescription",
						"     )) ~> sinktitlesynapse"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_aggregate_data')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dataflow_aggregate_data",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow_aggregate_data",
								"type": "DataFlowReference",
								"parameters": {
									"dataflow_param_fiscalyear": {
										"value": "@pipeline().parameters.pl_param_fiscalyear",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"sourcesqldbpayroll": {},
									"sourceblobhistpayroll": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 32,
								"computeType": "MemoryOptimized"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"pl_param_fiscalyear": {
						"type": "int",
						"defaultValue": 2020
					}
				},
				"annotations": [],
				"lastPublishTime": "2023-05-13T08:46:44Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_load_2021_payroll_into_sqldb')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dataflow_payroll_sqldb",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow_payroll_sqldb",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"sourceblobpayroll": {},
									"sinksqldbpayroll": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 16,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-05-13T07:02:30Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow_payroll_sqldb')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_load_2021_payroll_into_synapse')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dataflow_payroll_synapse",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow_payroll_synapse",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"sourceblobpayroll": {},
									"sinksynapsepayroll": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 16,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-05-13T08:10:58Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow_payroll_synapse')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_load_agency_into_synapse')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dataflow_agency_synapse",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow_agency_synapse",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"sourceblobagency": {},
									"sinksgencysynapse": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 16,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-05-13T08:11:58Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_load_emp_into_synapse')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dataflow_emp_synapse",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow_emp_synapse",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"sourceblobempmaster": {},
									"sinksynapseempmaster": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 16,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-05-13T08:12:49Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow_emp_synapse')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_load_jobtitle_into_synapse')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dataflow_title_synapse",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow_title_synapse",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"sourceblobtitle": {},
									"sinktitlesynapse": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 16,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-05-13T08:13:50Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow_title_synapse')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline_load_payroll_sqldb_to_synapse')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dataflow_payroll_sqldb_synapse",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow_payroll_sqldb_synapse",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"sourcesqldbpayroll": {},
									"sinksynapsepayroll": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 16,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-05-13T08:08:46Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/dataflow_payroll_sqldb_synapse')]"
			]
		}
	]
}